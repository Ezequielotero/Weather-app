{"version":3,"sources":["components/about.jsx","components/Card.jsx","components/Cards.jsx","components/SearchBar.jsx","components/Nav.jsx","components/Ciudad.jsx","App.js","index.js"],"names":["About","Card","min","max","name","img","onClose","id","className","onClick","Swal","position","icon","title","showConfirmButton","timer","to","src","width","height","alt","Cards","cities","map","c","SearchBar","onSearch","useState","city","setCity","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","Nav","Ciudad","temp","weather","wind","clouds","latitud","longitud","App","setCities","fetch","process","then","r","json","recurso","undefined","main","Math","round","temp_min","temp_max","speed","all","coord","lat","lon","aux","filter","ci","length","text","footer","onFilter","ciudadId","ciudad","parseInt","path","render","component","exact","match","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.765c971b.chunk.js","sourcesContent":["import React from 'react'; \r\nfunction About(){\r\n    return(\r\n        <div></div>\r\n    )\r\n}\r\nexport default About","import React from 'react';\r\nimport './card.css'\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert';\r\n\r\nexport default function Card ({min, max, name, img, onClose, id}) {\r\n  function alert(){  \r\n    Swal({\r\n      position: 'top-end',\r\n      icon: 'success',\r\n      title: 'Card deleted',\r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    })\r\n    onClose()\r\n}\r\n  return (\r\n      <div className=\"div\">\r\n        <div className=\"btnn\">\r\n            <button onClick={alert} className=\"btn\">X</button>\r\n        </div>\r\n        <Link to={`/ciudad/${id}`} >\r\n          <h5 className=\"card-title\">{name}</h5>\r\n          </Link>\r\n          <div className=\"fotos\">\r\n          <div className=\"row\">\r\n              <p>Minüßä: {min}¬∞</p>\r\n              <p>Maxü•µ: {max}¬∞</p>\r\n            </div>\r\n            <div className=\"imagen\">\r\n            <img className=\"img\" src={\"http://openweathermap.org/img/wn/\"+img+\"@2x.png\"} width=\"80\" height=\"80\" alt=\"\" />\r\n            </div>\r\n            </div>\r\n            </div>\r\n    );\r\n};","import React from 'react';\r\nimport Card from './Card.jsx';\r\nimport './cards.css'\r\n\r\nexport default function Cards({cities, onClose}) {\r\n  if(cities){\r\n    return (\r\n      <div className='cards'>\r\n        {cities.map(c => <Card\r\n            max={c.max}\r\n            min={c.min}\r\n            name={c.name}\r\n            img={c.img}\r\n            onClose={() => onClose(c.id)}\r\n            id={c.id}\r\n          />)}\r\n      </div>\r\n    );\r\n  } else {\r\n    return(\r\n      <div>Sin ciudades</div>\r\n    )\r\n  }\r\n}","import React, { useState } from \"react\";\r\nimport './search.css';\r\nexport default function SearchBar({onSearch}) {\r\n  const [city, setCity] = useState(\"\");\r\n  return (\r\n    <form className=\"todo\"\r\n    onSubmit={(e) => {\r\n      e.preventDefault();\r\n      onSearch(city);\r\n    }}>\r\n      <input className=\"text\"\r\n        type=\"text\"\r\n        placeholder=\"Ciudad...\"\r\n        value={city}\r\n        onChange={e => setCity(e.target.value)}\r\n      />\r\n      <input  className=\"boton\" type=\"submit\" value=\"Agregar\" />\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\n// import Logo from '../logoHenry.png'\r\n// import SearchBar from './SearchBar.jsx';\r\n\r\nimport SearchBar from './SearchBar';\r\nimport  './Nav.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n   function Nav({onSearch}) {\r\n    return (\r\n      <nav className=\"nav\">\r\n        <Link to='/'>\r\n          <span className=\"navbar-brand\">\r\n          </span>\r\n        </Link>\r\n        <div className=\"aboutdiv\">\r\n        <Link to='/about'>\r\n          <span className=\"about\">About me</span>\r\n        </Link>\r\n        </div>\r\n        <div className=\"hola\">\r\n          <SearchBar\r\n            onSearch={onSearch} className=\"searchbar\"\r\n          />\r\n          </div>\r\n      </nav>\r\n    );\r\n  };\r\n  export default Nav","import React from \"react\";\r\nimport  './ciudad.css';\r\nexport default function Ciudad({city}) {\r\n    if (!city) {return(<div>(\"no encontrada\")</div>)}\r\n    else\r\n    return (\r\n        <div className=\"ciudad\">\r\n                <div className=\"container\">\r\n                    <h2>{city.name}</h2>\r\n                    <div className=\"info\">\r\n                        <div>Temperaturaüå°Ô∏è: {city.temp} ¬∫C</div>\r\n                        <div>Climaüåà: {city.weather}</div>\r\n                        <div>Vientoüí®: {city.wind} km/h</div>\r\n                        <div>Cantidad de nubes‚òÅ: {city.clouds}</div>\r\n                        <div>Latitudüß≠: {city.latitud}¬∫</div>\r\n                        <div>Longitudüß≠: {city.longitud}¬∫</div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport About from './components/about.jsx';\r\nimport './index.css';\r\nimport React, { useState } from 'react'\r\nimport Cards from './components/Cards.jsx';\r\nimport Nav from './components/Nav.jsx';\r\nimport { Route } from 'react-router-dom';\r\nimport Ciudad from './components/Ciudad.jsx';\r\nimport Swal from 'sweetalert'\r\n\r\nexport default function App() {\r\n   const [cities ,setCities] = useState([]);\r\n  function onSearch(city) {\r\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_API_KEY}&units=metric`)\r\n      .then(r => r.json())\r\n      .then((recurso) => {\r\n        if(recurso.main !== undefined){\r\n          const city = {\r\n            min: Math.round(recurso.main.temp_min),\r\n            max: Math.round(recurso.main.temp_max),\r\n            img: recurso.weather[0].icon,\r\n            id: recurso.id,\r\n            wind: recurso.wind.speed,\r\n            temp: recurso.main.temp,\r\n            name: recurso.name,\r\n            weather: recurso.weather[0].main,\r\n            clouds: recurso.clouds.all,\r\n            latitud: recurso.coord.lat,\r\n            longitud: recurso.coord.lon\r\n          };\r\n          var aux=cities.filter(ci => ci.id!== city.id)\r\n          if (cities.length!==aux.length) {\r\n            Swal({\r\n              icon: 'error',\r\n              title: 'Oops...',\r\n              text: 'The city you entered was already added',\r\n              footer: '<a href>Why do I have this issue?</a>'\r\n            })\r\n          }else{\r\n            setCities( [...aux, city]);\r\n          Swal({\r\n            title:'New city!',\r\n            text:city.name+ ' was added successfully!',\r\n            icon:'success',\r\n            timer:1000\r\n          })}\r\n        } else {\r\n          Swal({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: 'The city you entered was not found!',\r\n            footer: '<a href>Why do I have this issue?</a>'\r\n          })\r\n        }\r\n      });\r\n    }\r\n      function onClose(id) {\r\n        setCities(cities.filter(c => c.id !== id));\r\n    }\r\n    function onFilter(ciudadId) {\r\n      let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\r\n      if(ciudad.length > 0) {\r\n          return ciudad[0];\r\n      } else {\r\n          return null;\r\n      }\r\n    }\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n      <Route\r\n        path='/'\r\n        render={() => <Nav onSearch={onSearch} />}/>\r\n        <Route\r\n        path='/about'\r\n        component={About}/>\r\n      </div>\r\n      <div>\r\n      <Route\r\n        exact path='/'\r\n        render={() => <Cards onClose={onClose} cities={cities}/> }/>\r\n      </div>\r\n      <div>\r\n      <Route\r\n  exact path='/ciudad/:ciudadId'\r\n  render={({match}) => <Ciudad city={onFilter(match.params.ciudadId)}/>}\r\n/>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n  );\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n"],"sourceRoot":""}